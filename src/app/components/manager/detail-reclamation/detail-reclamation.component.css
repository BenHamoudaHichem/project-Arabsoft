* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


.main-container {
  padding: 30px;
}

/* HEADING */

.heading {
  text-align: center;
}

.heading__title {
  font-weight: 550;
  text-transform: uppercase;
}

.heading__credits {
  margin: 10px 0px;
  color: #0e0c0c;
  font-size: 25px;
  transition: all 0.5s;
}
div{ text-align: justify;
  text-justify: inter-word;}
.heading__link {
  text-decoration: none;

}

.heading__credits .heading__link {
  color: inherit;
}

/* CARDS */

.cards {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

.card {
  margin: 20px;
  padding: 20px;
  width: 500px;
  min-height: 200px;
  display: grid;
  grid-template-rows: 20px 50px 1fr 50px;
  border-radius: 10px;
  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.25);
  transition: all 0.2s;
}

.card:hover {
  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.4);
  transform: scale(1.01);
}

.card__link,
.card__exit,
.card__icon {
  position: relative;
  text-decoration: none;
  color:#0e0c0c
}

.card__link::after {
  position: absolute;
  top: 25px;
  left: 0;
  content: "";
  width: 0%;
  height: 3px;
  background-color: rgba(255, 255, 255, 0.6);
  transition: all 0.5s;
}

.card__link:hover::after {
  width: 100%;
}

.card__exit {
  grid-row: 1/2;
  justify-self: end;
}

.card__icon {
  grid-row: 2/3;
  font-size: 30px;
}

.card__title {
  grid-row: 3/4;
  font-weight: 400;
  color: #0e0c0c;
}

.card__apply {
  grid-row: 4/5;
  align-self: center;
}

/* CARD BACKGROUNDS */

.card-1 {
  background: radial-gradient(#f0ecfc, #c797eb );
}

.card-2 {
  background: radial-gradient(#f0ecfc, #c797eb );
}

.card-3 {
  background: radial-gradient(#f0ecfc, #c797eb );
}

.card-4 {
  background: radial-gradient(#f0ecfc, #c797eb );
}

.card-5 {
  background: radial-gradient(#f588d8, #c0a3e5);
}

/* RESPONSIVE */

@media (max-width: 1600px) {
  .cards {
    justify-content: center;
  }
}
/*---*/

/*
uuu
*/


.button-88-pushable {
  position: relative;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
  outline-offset: 4px;
  transition: filter 250ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.button-88-shadow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: rgba(0, 0, 0, 0.25);
  will-change: transform;
  transform: translateY(2px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

.button-88-edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 12px;
  background: linear-gradient(
    to left,
    rgb(0, 54, 35) 0%,
    rgb(7, 182, 97) 8%,
    rgb(18, 200, 91) 92%,
    rgb(2, 71, 39) 100%
  );
}

.button-88-front {
  display: block;
  position: relative;
  padding: 12px 27px;
  border-radius: 12px;
  font-size: 1.1rem;
  color: white;
  background: rgb(8, 190, 102);
  will-change: transform;
  transform: translateY(-4px);
  transition:
    transform
    600ms
    cubic-bezier(.3, .7, .4, 1);
}

@media (min-width: 768px) {
  .button-88-front {
    font-size: 1.25rem;
    padding: 12px 42px;
  }
}

.button-88-pushable:hover {
  filter: brightness(110%);
}

.button-88-pushable:hover .button-82-front {
  transform: translateY(-6px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-88-pushable:active .button-82-front {
  transform: translateY(-2px);
  transition: transform 34ms;
}

.button-88-pushable:hover .button-82-shadow {
  transform: translateY(4px);
  transition:
    transform
    250ms
    cubic-bezier(.3, .7, .4, 1.5);
}

.button-88-pushable:active .button-82-shadow {
  transform: translateY(1px);
  transition: transform 34ms;
}

.button-88-pushable:focus:not(:focus-visible) {
  outline: none;
}
/*************/
/* From cssbuttons.io */
button {
  width: 150px;
  height: 50px;
  cursor: pointer;
  display: flex;
  align-items: center;
  background: red;
  border: none;
  border-radius: 5px;
  box-shadow: 1px 1px 3px rgba(0,0,0,0.15);
  background: #e62222;
 }
 .green {
  width: 150px;
  height: 50px;
  cursor: pointer;
  display: flex;
  align-items: center;
  background: #7ac142;
  border: none;
  border-radius: 5px;
  box-shadow: 1px 1px 3px rgba(0,0,0,0.15);
 }

 button, button span {
  transition: 200ms;
 }

 button .text {
  transform: translateX(35px);
  color: white;
text-transform: uppercase;
  font-size: 15px;
 }

 button .icon {
  position: absolute;
  border-left: 1px solid #c41b1b;
  transform: translateX(110px);
  height: 40px;
  width: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
 }
 button .iconG {
  position: absolute;
  border-left: 1px solid #6b8657;
  transform: translateX(110px);
  height: 40px;
  width: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
 }

 button svg {
  width: 30px;
  fill: #eee;
 }

 button:hover {
  background: #ff3636;
 }
 .green:hover {
  background: #7ac142;
 }

 button:hover .text {
  color: transparent;
 }

 button:hover .icon {
  width: 150px;
  border-left: none;
  transform: translateX(0);
 }
 button:hover .iconG {
  width: 150px;
  border-left: none;
  transform: translateX(0);
 }

 button:focus {
  outline: none;
 }

 button:active .icon svg {
  transform: scale(0.8);
 }





 /********/

.checkmark {
  width: 100;
  height: 100;
  border-radius: 50%;
  display: block;
  stroke-width: 10;
  stroke: #fff;
  stroke-miterlimit: 10;
  box-shadow: inset 0px 0px 0px #ffffff;
  animation: fill 0.4s ease-in-out 0.4s forwards, scale 0.3s ease-in-out 0.9s both;
}
.checkmark__circle {
  stroke-dasharray: 300;
  stroke-dashoffset: 300;
  stroke-width: 100;
  stroke-miterlimit: 10;
  stroke: #7ac142;
  fill: none;
  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
}
.checkmark__check {
  transform-origin: 60% 60%;
  stroke-dasharray: 100%;
  stroke-dashoffset: 100%;
  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
}
@keyframes stroke {
  100% {
    stroke-dashoffset: 0;
 }
}
@keyframes scale {
  0%, 100% {
    transform: none;
 }
  50% {
    transform: scale3d(1.1, 1.1, 1);
 }
}
@keyframes fill {
  100% {
    box-shadow: inset 0px 0px 0px 30px #7ac142;
 }
}
